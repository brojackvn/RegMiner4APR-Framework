diff -r -u ./RegMiner4APR-Regression-Bugs/BUGGY/src/main/java/com/univocity/parsers/common/ArgumentUtils.java ./RegMiner4APR-Regression-Bugs/BFC/src/main/java/com/univocity/parsers/common/ArgumentUtils.java
--- ./RegMiner4APR-Regression-Bugs/BUGGY/src/main/java/com/univocity/parsers/common/ArgumentUtils.java
+++ ./RegMiner4APR-Regression-Bugs/BFC/src/main/java/com/univocity/parsers/common/ArgumentUtils.java
@@ -136,11 +139,30 @@
	 *
	 * @return the index of the given character in the array, or -1 if the character could not be found.
	 */
+	public static int indexOf(char[] array, char element, int from) {
+		for (int i = from; i < array.length; i++) {
+			if (array[i] == element) {
+				return i;
+			}
+		}
+		return -1;
+	}

	/**
 	 * Returns the index of an element in a given array.
diff -r -u ./RegMiner4APR-Regression-Bugs/BUGGY/src/main/java/com/univocity/parsers/csv/CsvFormatDetector.java ./RegMiner4APR-Regression-Bugs/BFC/src/main/java/com/univocity/parsers/csv/CsvFormatDetector.java
--- ./RegMiner4APR-Regression-Bugs/BUGGY/src/main/java/com/univocity/parsers/csv/CsvFormatDetector.java
+++ ./RegMiner4APR-Regression-Bugs/BFC/src/main/java/com/univocity/parsers/csv/CsvFormatDetector.java
@@ -15,6 +15,7 @@
  ******************************************************************************/
 package com.univocity.parsers.csv;
 
+import com.univocity.parsers.common.*;
 import com.univocity.parsers.common.input.*;
 
 import java.util.*;
@@ -33,12 +34,14 @@
 	private final char normalizedNewLine;
 	private final int whitespaceRangeStart;
 	private char[] allowedDelimiters;
+	private char[] delimiterPreference;
 
 	/**
 	 * Builds a new {@code CsvFormatDetector}
@@ -48,11 +51,13 @@
 
 		if (allowedDelimiters != null && allowedDelimiters.length > 0) {
 			suggestedDelimiter = allowedDelimiters[0];
+			delimiterPreference = allowedDelimiters.clone();
 			Arrays.sort(allowedDelimiters);
 		} else {
 			String delimiter = settings.getFormat().getDelimiterString();
 			suggestedDelimiter = delimiter.length() > 1 ? ',' : settings.getFormat().getDelimiter();
 			allowedDelimiters = new char[0];
+			delimiterPreference = allowedDelimiters;
 		}
 
 		normalizedNewLine = settings.getFormat().getNormalizedNewline();
@@ -313,7 +318,13 @@
 					Integer newTotal = totals.get(newChar);
 
 					if (currentTotal != null && newTotal != null) {
-						if ((min && newTotal > currentTotal) || (!min && newTotal > currentTotal)) {
+						if (currentTotal.equals(newTotal)) {
+							int defIndex = ArgumentUtils.indexOf(delimiterPreference, defaultChar, 0);
+							int newIndex = ArgumentUtils.indexOf(delimiterPreference, newChar, 0);
+							if (defIndex != -1 && newIndex != -1) {
+								defaultChar = defIndex < newIndex ? defaultChar : newChar;
+							}
+						} else if ((min && newTotal > currentTotal) || (!min && newTotal > currentTotal)) {
 							defaultChar = newChar;
 						}
 					} else if (isSymbol(newChar)) {
