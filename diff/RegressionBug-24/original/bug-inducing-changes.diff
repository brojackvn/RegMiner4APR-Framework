diff -r -u ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/org/cactoos/io/WriterAsOutputStream.java ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/org/cactoos/io/WriterAsOutputStream.java
--- ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/org/cactoos/io/WriterAsOutputStream.java	2024-09-08 01:36:13.401803600 +1000
+++ ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/org/cactoos/io/WriterAsOutputStream.java	2024-09-08 01:36:13.337803151 +1000
@@ -43,7 +43,7 @@
  * <p>There is no thread-safety guarantee.
  *
  * @author Yegor Bugayenko (yegor256@gmail.com)
- * @version $Id: 38582fc7051149e80eb6594747907f2b5045104a $
+ * @version $Id: 41fd0264eee27200d766734c2f421c673bb22c0e $
  * @since 0.13
  */
 final class WriterAsOutputStream extends OutputStream {
@@ -171,6 +171,11 @@
         }
     }
 
+    @Override
+    public void close() throws IOException {
+        this.writer.close();
+    }
+
     /**
      * Write a portion from the buffer.
      * @param buffer The buffer
diff -r -u ./RegMiner4APR-Regression-Bugs/WORKING/src/test/java/org/cactoos/io/WriterAsOutputStreamTest.java ./RegMiner4APR-Regression-Bugs/BIC/src/test/java/org/cactoos/io/WriterAsOutputStreamTest.java
--- ./RegMiner4APR-Regression-Bugs/WORKING/src/test/java/org/cactoos/io/WriterAsOutputStreamTest.java	2024-09-08 01:36:13.413803684 +1000
+++ ./RegMiner4APR-Regression-Bugs/BIC/src/test/java/org/cactoos/io/WriterAsOutputStreamTest.java	2024-09-08 01:36:13.349803235 +1000
@@ -31,6 +31,7 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import org.cactoos.matchers.MatcherOf;
+import org.cactoos.matchers.ScalarHasValue;
 import org.cactoos.matchers.TextHasString;
 import org.cactoos.text.TextOf;
 import org.hamcrest.MatcherAssert;
@@ -40,11 +41,12 @@
  * Test case for {@link WriterAsOutputStream}.
  *
  * @author Yegor Bugayenko (yegor256@gmail.com)
- * @version $Id: 3f68699a21f1f09712e10531cc0c4f146bdb2be2 $
+ * @version $Id: b7415e1d84342534d7743949f35482772f50aa8f $
  * @since 0.13
  * @checkstyle JavadocMethodCheck (500 lines)
  * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)
  */
+@SuppressWarnings("PMD.AvoidDuplicateLiterals")
 public final class WriterAsOutputStreamTest {
 
     @Test
@@ -111,4 +113,30 @@
         );
     }
 
+    @Test
+    public void writesToFileAndRemovesIt() throws Exception {
+        final Path temp = new TempFile().value();
+        final String content = "Hello, товарищ! How are you?";
+        new LengthOf(
+            new TeeInput(
+                new InputOf(content),
+                new OutputTo(
+                    new WriterAsOutputStream(
+                        new OutputStreamWriter(
+                            new FileOutputStream(temp.toFile()),
+                            StandardCharsets.UTF_8
+                        ),
+                        StandardCharsets.UTF_8,
+                        // @checkstyle MagicNumber (1 line)
+                        345
+                    )
+                )
+            )
+        ).value();
+        Files.delete(temp);
+        MatcherAssert.assertThat(
+            () -> Files.exists(temp),
+            new ScalarHasValue<>(new MatcherOf<Boolean>(value -> !value))
+        );
+    }
 }
