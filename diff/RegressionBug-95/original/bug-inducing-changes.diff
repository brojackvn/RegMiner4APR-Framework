diff -r -u ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/com/alibaba/fastjson/parser/deserializer/SqlDateDeserializer.java ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/com/alibaba/fastjson/parser/deserializer/SqlDateDeserializer.java
--- ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/com/alibaba/fastjson/parser/deserializer/SqlDateDeserializer.java	2024-09-29 18:53:53.040914407 +1000
+++ ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/com/alibaba/fastjson/parser/deserializer/SqlDateDeserializer.java	2024-09-29 18:53:45.196832474 +1000
@@ -6,6 +6,7 @@
 import java.text.ParseException;
 import java.util.Date;
 
+import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONException;
 import com.alibaba.fastjson.parser.DefaultJSONParser;
 import com.alibaba.fastjson.parser.JSONScanner;
@@ -110,7 +111,12 @@
                 if (dateLexer.scanISO8601DateIfMatch(false)) {
                     longVal = dateLexer.getCalendar().getTimeInMillis();
                 } else {
-
+                    if (strVal.length() == 29) {
+                        String dateFomartPattern = parser.getDateFomartPattern();
+                        if (dateFomartPattern.length() != 29 && dateFomartPattern == JSON.DEFFAULT_DATE_FORMAT) {
+                            return (T) java.sql.Timestamp.valueOf(strVal);
+                        }
+                    }
                     DateFormat dateFormat = parser.getDateFormat();
                     try {
                         java.util.Date date = (java.util.Date) dateFormat.parse(strVal);
diff -r -u ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/com/alibaba/fastjson/serializer/DateCodec.java ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/com/alibaba/fastjson/serializer/DateCodec.java
--- ./RegMiner4APR-Regression-Bugs/WORKING/src/main/java/com/alibaba/fastjson/serializer/DateCodec.java	2024-09-29 18:53:53.040914407 +1000
+++ ./RegMiner4APR-Regression-Bugs/BIC/src/main/java/com/alibaba/fastjson/serializer/DateCodec.java	2024-09-29 18:53:45.196832474 +1000
@@ -82,6 +82,12 @@
                 return;
             }
         }
+
+        int nanos = 0;
+        if (clazz == java.sql.Timestamp.class) {
+            java.sql.Timestamp ts = (java.sql.Timestamp) object;
+            nanos = ts.getNanos();
+        }
         
         Date date;
         if (object instanceof Date) {
@@ -147,7 +153,17 @@
             int millis = calendar.get(Calendar.MILLISECOND);
 
             char[] buf;
-            if (millis != 0) {
+            if (nanos > 0) {
+                buf = "0000-00-00 00:00:00.000000000".toCharArray();
+                int nanoSize = IOUtils.stringSize(nanos);
+                IOUtils.getChars(nanos, 30 - (9 - nanoSize), buf);
+                IOUtils.getChars(second, 19, buf);
+                IOUtils.getChars(minute, 16, buf);
+                IOUtils.getChars(hour, 13, buf);
+                IOUtils.getChars(day, 10, buf);
+                IOUtils.getChars(month, 7, buf);
+                IOUtils.getChars(year, 4, buf);
+            } else if (millis != 0) {
                 buf = "0000-00-00T00:00:00.000".toCharArray();
                 IOUtils.getChars(millis, 23, buf);
                 IOUtils.getChars(second, 19, buf);
@@ -175,6 +191,10 @@
             }
             
             out.write(buf);
+            if (nanos > 0) { // java.sql.Timestamp
+                out.write(quote);
+                return;
+            }
 
             float timeZoneF = calendar.getTimeZone().getOffset(calendar.getTimeInMillis()) / (3600.0f * 1000);
             int timeZone = (int)timeZoneF;
